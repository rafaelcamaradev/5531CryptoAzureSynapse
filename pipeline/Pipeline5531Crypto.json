{
	"name": "Pipeline5531Crypto",
	"properties": {
		"activities": [
			{
				"name": "Copy5531CryptoVol",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy5531CryptoFactVol",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "5531_crypto_vol",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet5531Crypto",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy 5531CryptoVolBinance",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy 5531CryptoVolPond",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "5531_crypto_vol_binance",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "5531CryptoVolBinance",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "FailCryptoVol",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Copy5531CryptoVol",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Copy5531CryptoFactVol",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Copy 5531CryptoVolPond",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Failed to load tickers from Gate.io",
					"errorCode": {
						"value": "@pipeline().RunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FailCryptoVolBinance",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Copy 5531CryptoVolBinance",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Copy5531CryptoFactVolBinance",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Copy 5531CryptoVolPondBinance",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Error to load tickers from Binance",
					"errorCode": {
						"value": "@pipeline().RunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy5531CryptoFactVol",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "RemoveAllParquetFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "5531CryptoFactVol",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet5531CryptoFactVol",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy5531CryptoFactVolBinance",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy5531CryptoVol",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "5531FactCryptoVolBinance",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetFacCryptoVolBinance",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Union of Exchanges",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Copy 5531CryptoVolPondBinance",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "Union of Exchanges",
						"type": "NotebookReference"
					},
					"snapshot": true
				}
			},
			{
				"name": "RemoveAllParquetFiles",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "5531CryptoFiles",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"wildcardFileName": {
							"value": "@{concat('*',formatDateTime(utcNow(),'yyyyMMdd'),'*')\n\n}",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "FailToRemoveFiles",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "RemoveAllParquetFiles",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Failed to Remove files from Data Lake",
					"errorCode": {
						"value": "@pipeline().RunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy 5531CryptoVolPondBinance",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy 5531CryptoVolBinance",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "fact_analyze_crypto_vol_pond_binance",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet5531CryptoVolBinancePond",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy 5531CryptoVolPond",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy5531CryptoFactVolBinance",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "fact_analyze_crypto_vol_pond",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet5531CryptoVolPond",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CreateFinalHashTable",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Union of Exchanges",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "DedicatedPool01",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "CREATE TABLE [SQLPool01].[dm_5531crypto]\n    WITH    (   DISTRIBUTION = HASH([id])\n            ,   CLUSTERED COLUMNSTORE INDEX \n            )\nAS\nSELECT  *\nFROM    [SQLPool01].[dm_5531crypto_stage];"
						}
					]
				}
			},
			{
				"name": "FailComputingNotebooks",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "Union of Exchanges",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "Fail to process transformation in Spark",
					"errorCode": {
						"value": "@pipeline().RunId",
						"type": "Expression"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2022-07-06T18:55:39Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}